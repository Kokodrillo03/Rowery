name: Deploy Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and Deploy Application
    runs-on: ubuntu-latest

    env:
      APP_BUCKET_NAME: rowerowy-dolny-slask-vue-app
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install and Build Backend
        working-directory: ./backend
        run: |
          npm install
          npm run build

      - name: Install and Build Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Build sam
        working-directory: ./backend
        run: |
          sam build

      - name: Deploy CloudFormation Stack
        working-directory: ./backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: >
          sam deploy --parameter-overrides
          "DocumentDBPassword=${{ secrets.DOCUMENT_DB_PASSWORD }}
          GraphHopperApiKey=${{ secrets.GRAPH_HOPPER_API_KEY }}
          AppBucketName=$APP_BUCKET_NAME"

      - name: Delete Existing Contents from S3 Bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 rm s3://$APP_BUCKET_NAME --recursive

      - name: Upload New Frontend to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp ./frontend/dist s3://$APP_BUCKET_NAME --recursive

      - name: Invalidate CloudFront Cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws cloudfront create-invalidation --distribution-id E3R17JRI2YMHSL --paths "/*"
